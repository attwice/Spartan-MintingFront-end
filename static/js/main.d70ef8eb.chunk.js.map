{"version":3,"sources":["utils/interact.js","components/mint.js","App.js","reportWebVitals.js","index.js"],"names":["connectWallet","a","window","ethereum","request","method","addressArray","obj","address","alert","message","getCurrentWalletConnected","length","contractABI","require","contract","createAlchemyWeb3","process","eth","Contract","Mint","useState","walletAddress","setWallet","tokenNumber","setTokenNumber","supply","setSupply","mintStatus","setMintStatus","handleConnect","walletResponse","addWalletListener","on","accounts","useEffect","methods","totalSupply","call","then","_supply","catch","err","console","log","fetchData","className","Navbar","variant","expand","Brand","href","Nav","Link","src","alt","Toggle","aria-controls","Collapse","id","Button","onClick","String","substring","target","rel","loading","width","Container","Row","Col","lg","md","type","aria-hidden","disabled","sm","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d70ef8eb.chunk.js","sourcesContent":["export const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        const addressArray = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const obj = {          \r\n          address: addressArray[0],\r\n        };\r\n        return obj;\r\n      } catch (err) {\r\n        alert(err.message);\r\n        return {        \r\n          address: \"\",                \r\n        };\r\n      }\r\n    } else {\r\n      alert(\"Metamask is not installed!\");\r\n      return {\r\n        address: \"\",        \r\n      };\r\n    }\r\n  };\r\n  \r\n  export const getCurrentWalletConnected = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        const addressArray = await window.ethereum.request({\r\n          method: \"eth_accounts\",\r\n        });\r\n        if (addressArray.length > 0) {\r\n          return {\r\n            address: addressArray[0],            \r\n          };\r\n        } else {\r\n          return {\r\n            address: \"\",            \r\n          };\r\n        }\r\n      } catch (err) {\r\n        return {\r\n          address: \"\",          \r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        address: \"\",        \r\n      };\r\n    }\r\n  };\r\n  \r\n  ","import {\r\n  Button,\r\n  Nav,\r\n  Navbar,\r\n  Row,\r\n  Col,\r\n  Container\r\n} from \"react-bootstrap\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nimport { connectWallet, getCurrentWalletConnected } from \"../utils/interact.js\";\r\n\r\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\r\nconst contractABI = require(\"../kangaroo.json\");\r\nconst contractAddress = \"0xC4dDc55DDA525Abb97B7A09667Ed11577A374824\";\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\nconst contract = new web3.eth.Contract(contractABI, contractAddress);\r\n\r\n// const mintNFT = async (amount, price, state) => {\r\n//   const { address } = await getCurrentWalletConnected();\r\n//   if (address === \"\") {\r\n//     return {\r\n//       success: false,\r\n//       status: \"Please make sure wallet connected!\",\r\n//     }\r\n//   }\r\n//   else {\r\n//     const _amountOfEther = web3.utils.toWei(web3.utils.toBN(price), 'ether') * web3.utils.toBN(amount) / web3.utils.toBN(100);\r\n//     if (state === true) {\r\n//       contract.methods.presaleKangaroo(amount).send({ from: address, gas: 150000 * amount, value: _amountOfEther })\r\n//         .on(\"confirmation\", function () {\r\n//         })\r\n//         .on('error', async function (error, receipt) {\r\n//           console.log(error);\r\n//         });\r\n//     } else {\r\n//       contract.methods.publicsaleKangaroo(amount).send({ from: address, gas: 150000 * amount, value: _amountOfEther })\r\n//         .on(\"confirmation\", function () {\r\n//         })\r\n//         .on('error', async function (error, receipt) {\r\n//           console.log(error);\r\n//         });\r\n//     }\r\n\r\n//     return {\r\n//       status: \"\",\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n\r\nexport default function Mint() {\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  // const [status, setStatus] = useState(\"\"); \r\n  const [tokenNumber, setTokenNumber] = useState(1);\r\n  const [supply, setSupply] = useState(0);\r\n  const [mintStatus, setMintStatus] = useState(false);\r\n  // const [presaleState, setPresaleState] = useState(false);\r\n  const presaleState = false;\r\n  const tokenPrice1 = 3;\r\n  const tokenPrice2 = 4;\r\n  const tokenPrice3 = 5;\r\n\r\n  const decreaseTokenNumber = () => {\r\n    if (tokenNumber === 1) {\r\n      return;\r\n    }\r\n    setTokenNumber(tokenNumber - 1);\r\n  }\r\n\r\n  const setMaxTokenNumber = () => {\r\n    setTokenNumber(3);\r\n  }\r\n\r\n  const handleConnect = async () => {\r\n    const walletResponse = await connectWallet();\r\n    setWallet(walletResponse.address);\r\n  };\r\n\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0]);\r\n        } else {\r\n          setWallet(\"\");\r\n        }\r\n      });\r\n    } else {\r\n\r\n    }\r\n  }\r\n\r\n  /////timer\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const { address } = await getCurrentWalletConnected();\r\n      setWallet(address);\r\n      contract.methods.totalSupply().call().then((_supply) => {\r\n        setSupply(_supply);\r\n      }).catch((err) => console.log(err))\r\n      addWalletListener();\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mint-container purple-text\">\r\n      <Navbar variant=\"dark\" expand=\"md\" className=\"container bg-black\">\r\n        <Navbar.Brand href=\"/\">\r\n          <Nav.Link href=\"#home\"><img src=\"../images/logo.png\" className=\"logo-img\" alt=\"\" /></Nav.Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"mx-4\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"d-md-flex justify-content-between\">\r\n          <Nav className=\"flex-grow-1\">\r\n            <div className=\"d-flex mx-1 social-link\">\r\n              <div className=\"text-center text-white mr-3\">\r\n                <Button className=\"connect-btn mx-4 d-flex\" onClick={handleConnect}>\r\n                  <img className=\"mx-2 my-auto\" src=\"../images/walleticon.png\" alt=\"walleticon\" />\r\n                  {walletAddress.length > 0 ? (\r\n                    \"\" +\r\n                    String(walletAddress).substring(0, 6) +\r\n                    \"...\" +\r\n                    String(walletAddress).substring(38)\r\n                  ) : (\r\n                    <span>\r\n                      Connect\r\n                    </span>\r\n                  )\r\n                  }\r\n\r\n                </Button>\r\n              </div>\r\n              <a href=\"https://discord.gg/\" target=\"_blank\" className=\"d-flex align-items-center\" rel=\"noreferrer\">\r\n                <img className=\"icon-link\" src=\"../images/discord.png\" loading=\"lazy\" width=\"32\" alt=\"\" />\r\n              </a>\r\n              <a href=\"https://twitter.com/\" target=\"_blank\" className=\"d-flex align-items-center px-4\" rel=\"noreferrer\">\r\n                <img className=\"icon-link\" src=\"../images/ship.png\" loading=\"lazy\" width=\"32\" alt=\"\" />\r\n              </a>\r\n              <a href=\"https://twitter.com/\" target=\"_blank\" className=\"d-flex align-items-center\" rel=\"noreferrer\">\r\n                <img className=\"icon-link\" src=\"../images/twitter.png\" loading=\"lazy\" width=\"32\" alt=\"\" />\r\n              </a>\r\n            </div>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Container>\r\n        <Row className=\"mt-160\">\r\n          <Col lg={5} md={6} className=\"p-3\">\r\n            <div className=\"mint-box p-5 mx-auto\">\r\n              <h3 className=\"text-center mint-title\">Mint NFT</h3>\r\n              {mintStatus ? (\r\n                <div>\r\n                  <p className=\"text-center mint-txt\">Transaction in progress</p>\r\n                  <p className=\"text-center mint-sm-txt text-white mb-4 trans-txt-mt\">Your transaction is in progress</p>\r\n                  <p className=\"text-center mint-sm-txt text-white trans-txt-mb\">\r\n                    Once your transaction is completed, head to<br></br>\r\n                    <a className=\"casino-link\" href=\"http://spartan.casino/nfts\" rel=\"noopener noreferrer\" target=\"_blank\">spartan.casino/nfts </a>\r\n                    to view your NFTs.\r\n                  </p>\r\n                  <a href=\"http://spartan.casino/nfts\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                    <button className=\"mint-btn my-1 w-100 mb-5\">\r\n                      View Transactions\r\n                    </button>\r\n                  </a>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  <p className=\"text-center mint-txt\">10000 NFTs</p>\r\n                  <div className=\"mint-div py-3  d-flex justify-content-between\">\r\n                    <h4 className=\"mb-0 p-2\">Balance</h4>\r\n                    <h4 className=\"mb-0 p-2\">{supply} / 380 Sold Out</h4>\r\n                  </div>\r\n                  <div className=\"mint-div py-3 d-flex justify-content-between\">\r\n                    <h4 className=\"mb-0 p-2\">Amount </h4>\r\n                    <div className=\"mint-number\">\r\n                      <button className=\"min-add\" type=\"button\" onClick={decreaseTokenNumber}><span aria-hidden=\"true\">-</span></button>\r\n                      <h4 className=\"mb-0 mx-3\">{tokenNumber}</h4>\r\n                      {\r\n                        presaleState ? [tokenNumber < 3 ? <button className=\"min-add\" type=\"button\">\r\n                          <span aria-hidden=\"true\">+</span></button> :\r\n                          <button className=\"min-add\" type=\"button\" onClick={() => setTokenNumber(tokenNumber + 1)}>\r\n                            <span aria-hidden=\"true\">+</span></button>] :\r\n                          [tokenNumber < 3 ? <button className=\"min-add\" type=\"button\" onClick={() => setTokenNumber(tokenNumber + 1)}>\r\n                            <span aria-hidden=\"true\">+</span></button> :\r\n                            <button className=\"min-add\" type=\"button\" onClick={() => setTokenNumber(tokenNumber)}>\r\n                              <span aria-hidden=\"true\">+</span></button>\r\n                          ]}\r\n                    </div>\r\n                    <button className=\"max-btn\" onClick={() => setMaxTokenNumber()}>Max</button>\r\n                  </div>\r\n                  <div className=\"mint-div py-3 d-flex justify-content-between\">\r\n                    <h4 className=\"mb-0 p-2\">Total</h4>\r\n                    {presaleState ? <h4 className=\"mb-0 p-2\">{tokenPrice1 * tokenNumber / 100} ETH</h4> : [tokenNumber <= 3 ?\r\n                      <h4 className=\"mb-0 p-2\">{tokenPrice3 * tokenNumber / 100} ETH</h4> : [tokenNumber <= 3 ?\r\n                        <h4 className=\"mb-0 p-2\">{tokenPrice2 * tokenNumber / 100} ETH</h4> : <h4 className=\"mb-0 p-2\">{tokenPrice1 * tokenNumber / 100} ETH</h4>]]\r\n                    }\r\n                  </div>\r\n                  <div className=\"mt-5 pt-4\">\r\n                    {walletAddress ? (\r\n                      <button className=\"mint-btn my-1 w-100\" onClick={() => setMintStatus(true)}>\r\n                        mint\r\n                      </button>\r\n                    ) : (\r\n                      <button className=\"unav-btn my-1 w-100\" disabled>\r\n                        unavailable\r\n                      </button>\r\n                    )}\r\n                    <p className=\"text-center text-white mb-0\">Make sure your metamask wallet is connected</p>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Col lg={7} md={6} sm={12} className=\"text-center\">\r\n            <img className=\"gif-ani\" src=\"../images/mint.gif\" alt=\"\" />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"footer-top\">\r\n          <Col className=\"mt-5\" md={4} sm={12}>\r\n            <div className=\"footer-box p-3 text-center mx-auto\">\r\n              <img className=\"footer-icon\" src=\"../images/eth.png\" alt=\"\" />\r\n              <h2>10,000</h2>\r\n              <h5 className=\"mb-5\">NFT Membership Cards</h5>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"mt-5\" md={4} sm={12}>\r\n            <div className=\"footer-box p-3 text-center mx-auto\">\r\n              <img className=\"footer-icon\" src=\"../images/wallet.png\" alt=\"\" />\r\n              <h2>0.05ETH</h2>\r\n              <h5 className=\"mb-5\">Price per NFT</h5>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"mt-5\" md={4} sm={12}>\r\n            <div className=\"footer-box p-3 text-center mx-auto\">\r\n              <img className=\"footer-icon\" src=\"../images/opt.png\" alt=\"\" />\r\n              <h2>500K+</h2>\r\n              <h5 className=\"mb-5\">Potential Options</h5>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}","import { Fragment } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/navbar.css';\nimport './styles/main.css';\nimport Mint from './components/mint';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Mint />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}